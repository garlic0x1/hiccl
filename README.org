#+title: Readme

Hiccup HTML generator for Common Lisp

* Purpose
Spinneret is great but having to use macros to compose elements is less intuitive than simply having a function to render sexprs into html

* Usage
- Symbols are raw (you can write literal HTML between `|` symbols)
- Strings are sanitized
- Lists are HTML nodes
#+begin_src lisp :exports both
(render
 `(div :hi "world"
    (:span "tag can be symbol")
    "no </\"xss\"> allowed"
    |symbols <are> "raw" </are>|
    (a :href "hTtPs://link.org" "clickme")))
#+end_src

#+RESULTS:
#+begin_example
<div hi="world">
  <span>
    tag can be symbol
  </span>
  no &lt;/&quot;xss&quot;&gt; allowed
  symbols <are> "raw" </are>
  <a href="hTtPs://link.org">
    clickme
  </a>
</div>
#+end_example

Render to a stream by specifying the `:out` argument, renders to string by default
#+begin_src lisp
(render sxml :out *standard-output*)
#+end_src

* To do
- JSX style class and ID in tag

  #+begin_src lisp
(:div.class-name#id-name)
#+end_src
- Emit warning if unknown tag or attribute

  this will have to be at runtime instead of compile-time like spinneret
